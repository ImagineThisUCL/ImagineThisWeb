{"ast":null,"code":"var _jsxFileName = \"/Users/jeremychang/git/ImagineThisWeb/imaginethisweb/src/views/WireframesPage.js\";\nimport React, { Component, Fragment } from \"react\";\nimport Navigation from \"../components/Navigation\";\nimport WireframeCard from \"../components/WireframeCard\";\nimport '../css/wireframespage.css';\nimport $ from 'jquery';\nimport Button from 'react-bootstrap/Button';\nimport Cookies from \"universal-cookie\";\nexport class WireframesPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.selectAll = () => {\n      let array = [];\n      this.state.wireframeList.forEach(element => {\n        array.push(element.id);\n      });\n      this.setState({\n        selected: array\n      });\n    };\n\n    this.clearSelected = () => {\n      this.setState({\n        selected: []\n      });\n    };\n\n    if (this.props.history.location.state.wireframeList === undefined) {\n      window.location.href = 'http://localhost:3000';\n    }\n\n    const cookie = new Cookies();\n    this.state = {\n      projectName: this.props.history.location.state.projectName,\n      wireframeList: this.props.history.location.state.wireframeList,\n      projectID: cookie.get('projectID'),\n      accessToken: cookie.get('accessToken'),\n      authType: cookie.get('authType'),\n      selected: []\n    };\n    this.onChangeHandle = this.onChangeHandle.bind(this);\n    this.toConvertPage = this.toConvertPage.bind(this);\n    this.addToSelected = this.addToSelected.bind(this);\n    this.removeSelected = this.removeSelected.bind(this);\n  }\n\n  toConvertPage() {\n    // this.props.history.push({\n    //     pathname: '/convert',\n    //     state:{\n    //         selected:this.state.selected\n    //     }\n    // })\n    let responseData = undefined;\n    $.ajax({\n      type: \"POST\",\n      url: 'http://localhost:8080/generatePage',\n      contentType: 'application/json',\n      dataType: \"json\",\n      async: false,\n      data: JSON.stringify({\n        'accessToken': this.state.accessToken,\n        'projectID': this.state.projectID,\n        'authType': this.state.authType,\n        'pageList': this.state.selected\n      }),\n      success: function (data) {\n        responseData = data;\n      },\n      error: function (xhr, status, err) {\n        console.log('error');\n      }\n    });\n\n    if (responseData.isSuccess) {\n      window.location.href = 'http://localhost:8080/downloadFile?fileName=' + responseData.fileName;\n    }\n  }\n\n  addToSelected(id) {\n    this.setState({\n      selected: [...this.state.selected, id]\n    });\n  }\n\n  removeSelected(id) {\n    let array = Array.from(this.state.selected);\n    let index = array.indexOf(id);\n\n    if (index !== -1) {\n      array.splice(index, 1);\n      this.setState({\n        selected: array\n      });\n    }\n  }\n\n  onChangeHandle(id) {\n    let array = this.state.selected;\n\n    if (array.includes(id)) {\n      this.removeSelected(id);\n    } else {\n      this.addToSelected(id);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Navigation, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid container--margin-bottom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 d-flex flex-column align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"mt-5 mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 29\n      }\n    }, \"Please select the wireframes that you wish to convert:\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }\n    }, this.state.wireframeList.map((item, index) => /*#__PURE__*/React.createElement(\"div\", {\n      className: 'col-6 col-sm-4 col-lg-3 col-xl-2 pt-4 pb-4 pr-3 pl-3',\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-wrapper\",\n      onClick: () => this.onChangeHandle(item.name),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(WireframeCard, {\n      title: item.name,\n      image: item.imageURL,\n      id: item.id,\n      selected: this.state.selected.includes(item.name),\n      onChange: () => this.onChangeHandle(item.name),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 37\n      }\n    })))))), /*#__PURE__*/React.createElement(\"nav\", {\n      className: \"navbar fixed-bottom navbar-light bottom-actionbar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"mt-1\",\n      onClick: () => this.selectAll(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 25\n      }\n    }, \"Select all\"), /*#__PURE__*/React.createElement(Button, {\n      className: \"mt-1 ml-2\",\n      onClick: () => this.clearSelected(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 25\n      }\n    }, \"Unselect all\")), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"bottom-actionbar__selected-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 21\n      }\n    }, \"Currently selected: \", this.state.selected.length), /*#__PURE__*/React.createElement(Button, {\n      className: \"bottom-actionbar__button-convert mt-1\",\n      onClick: e => this.toConvertPage(),\n      disabled: this.state.selected.length === 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 21\n      }\n    }, \"Convert to code\")));\n  }\n\n}\nexport default WireframesPage;","map":{"version":3,"sources":["/Users/jeremychang/git/ImagineThisWeb/imaginethisweb/src/views/WireframesPage.js"],"names":["React","Component","Fragment","Navigation","WireframeCard","$","Button","Cookies","WireframesPage","constructor","props","selectAll","array","state","wireframeList","forEach","element","push","id","setState","selected","clearSelected","history","location","undefined","window","href","cookie","projectName","projectID","get","accessToken","authType","onChangeHandle","bind","toConvertPage","addToSelected","removeSelected","responseData","ajax","type","url","contentType","dataType","async","data","JSON","stringify","success","error","xhr","status","err","console","log","isSuccess","fileName","Array","from","index","indexOf","splice","includes","render","map","item","name","imageURL","length","e"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from \"react\"\nimport Navigation from \"../components/Navigation\"\nimport WireframeCard from \"../components/WireframeCard\"\nimport '../css/wireframespage.css'\nimport $ from 'jquery'\nimport Button from 'react-bootstrap/Button'\nimport Cookies from \"universal-cookie\"\n\nexport class WireframesPage extends Component{\n    constructor(props) {\n        super(props)\n        if(this.props.history.location.state.wireframeList === undefined){\n            window.location.href = 'http://localhost:3000'\n        }\n        const cookie = new Cookies()\n        this.state = {\n            projectName : this.props.history.location.state.projectName,\n            wireframeList : this.props.history.location.state.wireframeList,\n            projectID: cookie.get('projectID'),\n            accessToken: cookie.get('accessToken'),\n            authType: cookie.get('authType'),\n            selected:[]\n        }\n        this.onChangeHandle = this.onChangeHandle.bind(this)\n        this.toConvertPage = this.toConvertPage.bind(this)\n        this.addToSelected = this.addToSelected.bind(this)\n        this.removeSelected = this.removeSelected.bind(this)\n    }\n\n    toConvertPage() {\n        // this.props.history.push({\n        //     pathname: '/convert',\n        //     state:{\n        //         selected:this.state.selected\n        //     }\n        // })\n        let responseData = undefined;\n        $.ajax({\n            type: \"POST\",\n            url: 'http://localhost:8080/generatePage',\n            contentType: 'application/json',\n            dataType: \"json\",\n            async: false,\n            data: JSON.stringify({\n                'accessToken': this.state.accessToken,\n                'projectID': this.state.projectID,\n                'authType': this.state.authType,\n                'pageList': this.state.selected\n            }),\n            success: function (data) {\n                responseData = data;\n            },\n            error: function (xhr, status, err) {\n                console.log('error');\n            }\n        })\n        if(responseData.isSuccess){\n            window.location.href = 'http://localhost:8080/downloadFile?fileName='+responseData.fileName;\n        }\n\n    }\n\n    addToSelected(id) {\n        this.setState({\n            selected:[...this.state.selected, id]\n        })\n    }\n\n    removeSelected(id) {\n        let array = Array.from(this.state.selected)\n        let index = array.indexOf(id)\n        if (index !== -1) {\n            array.splice(index, 1)\n            this.setState({selected: array})\n        }\n    }\n\n    selectAll = () => {\n        let array = []\n        this.state.wireframeList.forEach(element => {\n            array.push(element.id)\n        })\n        this.setState({ selected: array })\n    }\n\n    clearSelected = () => {\n        this.setState({ selected: [] })\n    }\n\n    onChangeHandle(id) {\n        let array = this.state.selected\n        if(array.includes(id)){\n            this.removeSelected(id)\n        } else {\n            this.addToSelected(id)\n        }\n    }\n\n    render() {\n        return(\n            <Fragment>\n                <Navigation/>\n                <div className='container-fluid container--margin-bottom'>\n                    <div className='row'>\n                        <div className='col-12 d-flex flex-column align-items-center'>\n                            <h3 className='mt-5 mb-3'>Please select the wireframes that you wish to convert:</h3>\n                        </div>\n                    </div>\n                    <div className='row'>\n                    </div>\n                    <div className='row'>\n                        {this.state.wireframeList.map((item, index) => (\n                            <div className={'col-6 col-sm-4 col-lg-3 col-xl-2 pt-4 pb-4 pr-3 pl-3'} key={index}>\n                                <div \n                                    className='card-wrapper'\n                                    onClick={() => this.onChangeHandle(item.name)}>\n                                    <WireframeCard\n                                        title={item.name}\n                                        image = {item.imageURL}\n                                        id = {item.id}\n                                        selected={this.state.selected.includes(item.name)}\n                                        onChange={() => this.onChangeHandle(item.name)}\n                                    />\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n                <nav className=\"navbar fixed-bottom navbar-light bottom-actionbar\">\n                    <div>\n                        <Button\n                            className='mt-1'\n                            onClick={() => this.selectAll()}>\n                            Select all\n                        </Button>\n                        <Button\n                            className='mt-1 ml-2'\n                            onClick={() => this.clearSelected()}>\n                            Unselect all\n                        </Button>\n                    </div>\n                    <span className=\"bottom-actionbar__selected-text\">Currently selected: {this.state.selected.length}</span>\n                    <Button \n                        className='bottom-actionbar__button-convert mt-1' \n                        onClick={(e) => this.toConvertPage()}\n                        disabled={this.state.selected.length === 0}>\n                        Convert to code\n                    </Button>\n                </nav>\n\n            </Fragment>\n        )\n    }\n}\n\nexport default WireframesPage\n"]},"metadata":{},"sourceType":"module"}